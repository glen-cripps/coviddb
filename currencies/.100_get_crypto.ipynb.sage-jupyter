{"kernelspec":{"display_name":"Python 3 (system-wide)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.9"}}
{"cell_type":"code","execution_count":11,"metadata":{"trusted":true},"outputs":[],"source":"import requests \nimport pandas as pd \nfrom bs4 import BeautifulSoup\n\nimport arrow\ntoday_dt = arrow.now().format('YYYYMMDD')"}
{"cell_type":"code","execution_count":13,"metadata":{"trusted":true},"outputs":[],"source":"names=[]\nprices=[]\nchanges=[]\npercentChanges=[]\nmarketCaps=[]\ntotalVolumes=[]\ncirculatingSupplys=[]\n \nCryptoCurrenciesUrl = \"https://www.finance.yahoo.com/currencies\"\nr= requests.get(CryptoCurrenciesUrl)\ndata=r.text\nsoup=BeautifulSoup(data)\n \ncounter = 40\nfor i in range(40, 404, 14):\n   for listing in soup.find_all('tr', attrs={'data-reactid':i}):\n      for name in listing.find_all('td', attrs={'data-reactid':i+3}):\n         names.append(name.text)\n      for price in listing.find_all('td', attrs={'data-reactid':i+4}):\n         prices.append(price.text)\n      for change in listing.find_all('td', attrs={'data-reactid':i+5}):\n         changes.append(change.text)\n      for percentChange in listing.find_all('td', attrs={'data-reactid':i+7}):\n         percentChanges.append(percentChange.text)\ndf = pd.DataFrame({\"names\": names, \"prices\": prices, \"change\": changes, \"pct_change\": percentChanges})"}
{"cell_type":"code","execution_count":14,"metadata":{"trusted":true},"outputs":[],"source":"df.to_parquet(\"currencies_prices.\" + today_dt + '.parquet')\n"}
{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":""}
{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":""}